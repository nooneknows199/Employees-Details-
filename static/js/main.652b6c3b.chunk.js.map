{"version":3,"sources":["components/PageHeader.js","components/controls/Button.js","components/controls/ActionButton.js","components/controls/Controls.js","components/controls/Input.js","components/controls/RadioGroup.js","components/controls/Select.js","components/controls/Checkbox.js","components/controls/DatePicker.js","components/useForm.js","services/employeeService.js","pages/Employees/EmployeeForm.js","components/useTable.js","components/Popup.js","components/Notification.js","components/ConfirmDialog.js","pages/Employees/Employees.js","App/App.js","index.js"],"names":["useStyles","makeStyles","theme","root","backgroundColor","pageHeader","padding","spacing","display","marginBottom","pageIcon","color","pageTitle","paddingLeft","opacity","PageHeader","props","classes","title","subTitle","icon","Paper","elevation","square","className","Card","Typography","variant","component","margin","label","textTransform","minWidth","secondary","palette","light","main","primary","Controls","Input","name","value","error","onChange","other","TextField","helperText","RadioGroup","items","FormControl","FormLabel","row","map","item","FormControlLabel","key","id","control","Radio","Select","options","InputLabel","MenuItem","FormHelperText","Checkbox","checked","e","target","convertToDefEventPara","DatePicker","utils","DateFnsUtils","disableToolbar","inputVariant","format","date","Button","text","size","onClick","ActionButton","children","width","Form","autoComplete","KEYS","insertEmployee","data","employees","getAllEmployees","localStorage","getItem","setItem","parseInt","toString","generateEmployeeId","push","JSON","stringify","parse","departments","x","department","departmentId","genderItems","initialFValues","fullName","email","mobile","city","gender","hireDate","Date","isPermanent","EmployeeForm","addOrEdit","recordForEdit","validate","fieldValues","values","temp","errors","test","length","setErrors","Object","every","validateOnChange","useState","setValues","handleInputChange","resetForm","useForm","useEffect","onSubmit","preventDefault","Grid","container","xs","type","table","marginTop","fontWeight","cursor","useTable","records","headCells","filterFn","pages","page","setPage","rowsPerPage","setRowsPerPage","order","setOrder","orderBy","setOrderBy","handleChangePage","event","newPage","handleChangeRowsPerPage","descendingComparator","a","b","TblContainer","Table","TblHead","TableHead","TableRow","headCell","TableCell","sortDirection","disableSorting","TableSortLabel","active","direction","cellId","TblPagination","TablePagination","rowsPerPageOptions","count","onChangePage","onChangeRowsPerPage","recordsAfterPagingAndSorting","array","comparator","stabilizedThis","el","index","sort","stableSort","fn","getComparator","slice","dialogWrapper","position","top","dialogTitle","paddingRight","Popup","openPopup","setOpenPopup","Dialog","open","maxWidth","paper","DialogTitle","style","flexGrow","DialogContent","dividers","Notification","notify","setNotify","handleClose","reason","isOpen","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","Alert","severity","message","dialog","textAlign","dialogContent","dialogAction","justifyContent","titleIcon","fontSize","ConfirmDialog","confirmDialog","setConfirmDialog","IconButton","disableRipple","DialogActions","onConfirm","pageContent","searchInput","newButton","right","Employees","setRecordForEdit","employeeService","setRecords","setFilterFn","onDelete","filter","Toolbar","InputProps","startAdornment","InputAdornment","Search","toLowerCase","includes","startIcon","TableBody","openInPopup","employee","recordIndex","findIndex","createMuiTheme","background","default","overrides","MuiAppBar","transform","MuiIconButton","App","ThemeProvider","CssBaseline","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.652b6c3b.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Paper, Card, Typography, makeStyles } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: '#fdfdff'\r\n    },\r\n    pageHeader:{\r\n        padding:theme.spacing(4),\r\n        display:'flex',\r\n        marginBottom:theme.spacing(2)\r\n    },\r\n    pageIcon:{\r\n        display:'inline-block',\r\n        padding:theme.spacing(2),\r\n        color:'#3c44b1'\r\n    },\r\n    pageTitle:{\r\n        paddingLeft:theme.spacing(4),\r\n        '& .MuiTypography-subtitle2':{\r\n            opacity:'0.6'\r\n        }\r\n    }\r\n}))\r\n\r\nexport default function PageHeader(props) {\r\n\r\n    const classes = useStyles();\r\n    const { title, subTitle, icon } = props;\r\n    return (\r\n        <Paper elevation={0} square className={classes.root}>\r\n            <div className={classes.pageHeader}>\r\n                <Card className={classes.pageIcon}>\r\n                    {icon}\r\n                </Card>\r\n                <div className={classes.pageTitle}>\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                        component=\"div\">\r\n                        {title}</Typography>\r\n                    <Typography\r\n                        variant=\"subtitle2\"\r\n                        component=\"div\">\r\n                        {subTitle}</Typography>\r\n                </div>\r\n            </div>\r\n        </Paper>\r\n    )\r\n}","import React from 'react'\r\nimport { Button as MuiButton, makeStyles } from \"@material-ui/core\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        margin: theme.spacing(0.5)\r\n    },\r\n    label: {\r\n        textTransform: 'none'\r\n    }\r\n}))\r\n\r\nexport default function Button(props) {\r\n\r\n    const { text, size, color, variant, onClick, ...other } = props\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <MuiButton\r\n            variant={variant || \"contained\"}\r\n            size={size || \"large\"}\r\n            color={color || \"primary\"}\r\n            onClick={onClick}\r\n            {...other}\r\n            classes={{ root: classes.root, label: classes.label }}>\r\n            {text}\r\n        </MuiButton>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Button, makeStyles } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        minWidth: 0,\r\n        margin: theme.spacing(0.5)\r\n    },\r\n    secondary: {\r\n        backgroundColor: theme.palette.secondary.light,\r\n        '& .MuiButton-label': {\r\n            color: theme.palette.secondary.main,\r\n        }\r\n    },\r\n    primary: {\r\n        backgroundColor: theme.palette.primary.light,\r\n        '& .MuiButton-label': {\r\n            color: theme.palette.primary.main,\r\n        }\r\n    },\r\n}))\r\n\r\nexport default function ActionButton(props) {\r\n\r\n    const { color, children, onClick } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Button\r\n            className={`${classes.root} ${classes[color]}`}\r\n            onClick={onClick}>\r\n            {children}\r\n        </Button>\r\n    )\r\n}\r\n","import Input from \"./Input\";\r\nimport RadioGroup from \"./RadioGroup\";\r\nimport Select from \"./Select\";\r\nimport Checkbox from \"./Checkbox\";\r\nimport DatePicker from \"./DatePicker\";\r\nimport Button from \"./Button\";\r\nimport ActionButton from \"./ActionButton\";\r\n\r\nconst Controls = {\r\n    Input,\r\n    RadioGroup,\r\n    Select,\r\n    Checkbox,\r\n    DatePicker,\r\n    Button,\r\n    ActionButton\r\n}\r\n\r\nexport default Controls;","import React from 'react'\r\nimport { TextField } from '@material-ui/core';\r\n\r\nexport default function Input(props) {\r\n\r\n    const { name, label, value,error=null, onChange, ...other } = props;\r\n    return (\r\n        <TextField\r\n            variant=\"outlined\"\r\n            label={label}\r\n            name={name}\r\n            value={value}\r\n            onChange={onChange}\r\n            {...other}\r\n            {...(error && {error:true,helperText:error})}\r\n        />\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { FormControl, FormLabel, RadioGroup as MuiRadioGroup, FormControlLabel, Radio } from '@material-ui/core';\r\n\r\nexport default function RadioGroup(props) {\r\n\r\n    const { name, label, value, onChange, items } = props;\r\n\r\n    return (\r\n        <FormControl>\r\n            <FormLabel>{label}</FormLabel>\r\n            <MuiRadioGroup row\r\n                name={name}\r\n                value={value}\r\n                onChange={onChange}>\r\n                {\r\n                    items.map(\r\n                        item => (\r\n                            <FormControlLabel key={item.id} value={item.id} control={<Radio />} label={item.title} />\r\n                        )\r\n                    )\r\n                }\r\n            </MuiRadioGroup>\r\n        </FormControl>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { FormControl, InputLabel, Select as MuiSelect, MenuItem, FormHelperText } from '@material-ui/core';\r\n\r\nexport default function Select(props) {\r\n\r\n    const { name, label, value,error=null, onChange, options } = props;\r\n\r\n    return (\r\n        <FormControl variant=\"outlined\"\r\n        {...(error && {error:true})}>\r\n            <InputLabel>{label}</InputLabel>\r\n            <MuiSelect\r\n                label={label}\r\n                name={name}\r\n                value={value}\r\n                onChange={onChange}>\r\n                <MenuItem value=\"\">None</MenuItem>\r\n                {\r\n                    options.map(\r\n                        item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\r\n                    )\r\n                }\r\n            </MuiSelect>\r\n            {error && <FormHelperText>{error}</FormHelperText>}\r\n        </FormControl>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { FormControl, FormControlLabel, Checkbox as MuiCheckbox } from '@material-ui/core';\r\n\r\nexport default function Checkbox(props) {\r\n\r\n    const { name, label, value, onChange } = props;\r\n\r\n\r\n    const convertToDefEventPara = (name, value) => ({\r\n        target: {\r\n            name, value\r\n        }\r\n    })\r\n\r\n    return (\r\n        <FormControl>\r\n            <FormControlLabel\r\n                control={<MuiCheckbox\r\n                    name={name}\r\n                    color=\"primary\"\r\n                    checked={value}\r\n                    onChange={e => onChange(convertToDefEventPara(name, e.target.checked))}\r\n                />}\r\n                label={label}\r\n            />\r\n        </FormControl>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nexport default function DatePicker(props) {\r\n\r\n    const { name, label, value, onChange } = props\r\n\r\n\r\n    const convertToDefEventPara = (name, value) => ({\r\n        target: {\r\n            name, value\r\n        }\r\n    })\r\n\r\n    return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker disableToolbar variant=\"inline\" inputVariant=\"outlined\"\r\n                label={label}\r\n                format=\"MMM/dd/yyyy\"\r\n                name={name}\r\n                value={value}\r\n                onChange={date =>onChange(convertToDefEventPara(name,date))}\r\n\r\n            />\r\n        </MuiPickersUtilsProvider>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nexport function useForm(initialFValues, validateOnChange = false, validate) {\r\n\r\n\r\n    const [values, setValues] = useState(initialFValues);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const handleInputChange = e => {\r\n        const { name, value } = e.target\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n        if (validateOnChange)\r\n            validate({ [name]: value })\r\n    }\r\n\r\n    const resetForm = () => {\r\n        setValues(initialFValues);\r\n        setErrors({})\r\n    }\r\n\r\n\r\n    return {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n\r\n    }\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        '& .MuiFormControl-root': {\r\n            width: '80%',\r\n            margin: theme.spacing(1)\r\n        }\r\n    }\r\n}))\r\n\r\nexport function Form(props) {\r\n\r\n    const classes = useStyles();\r\n    const { children, ...other } = props;\r\n    return (\r\n        <form className={classes.root} autoComplete=\"off\" {...other}>\r\n            {props.children}\r\n        </form>\r\n    )\r\n}\r\n\r\n","const KEYS = {\r\n    employees: 'employees',\r\n    employeeId: 'employeeId'\r\n}\r\n\r\nexport const getDepartmentCollection = () => ([\r\n    { id: '1', title: 'Development' },\r\n    { id: '2', title: 'Marketing' },\r\n    { id: '3', title: 'Accounting' },\r\n    { id: '4', title: 'HR' },\r\n])\r\n\r\nexport function insertEmployee(data) {\r\n    let employees = getAllEmployees();\r\n    data['id'] = generateEmployeeId()\r\n    employees.push(data)\r\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees))\r\n}\r\n\r\nexport function updateEmployee(data) {\r\n    let employees = getAllEmployees();\r\n    let recordIndex = employees.findIndex(x => x.id === data.id);\r\n    employees[recordIndex] = { ...data }\r\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees));\r\n}\r\n\r\nexport function deleteEmployee(id) {\r\n    let employees = getAllEmployees();\r\n    employees = employees.filter(x => x.id !== id)\r\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees));\r\n}\r\n\r\nexport function generateEmployeeId() {\r\n    if (localStorage.getItem(KEYS.employeeId) == null)\r\n        localStorage.setItem(KEYS.employeeId, '0')\r\n    var id = parseInt(localStorage.getItem(KEYS.employeeId))\r\n    localStorage.setItem(KEYS.employeeId, (++id).toString())\r\n    return id;\r\n}\r\n\r\nexport function getAllEmployees() {\r\n    if (localStorage.getItem(KEYS.employees) == null)\r\n        localStorage.setItem(KEYS.employees, JSON.stringify([]))\r\n    let employees = JSON.parse(localStorage.getItem(KEYS.employees));\r\n    //map departmentID to department title\r\n    let departments = getDepartmentCollection();\r\n    return employees.map(x => ({\r\n        ...x,\r\n        department: departments[x.departmentId - 1].title\r\n    }))\r\n}","import React, { useEffect } from 'react'\r\nimport { Grid, } from '@material-ui/core';\r\nimport Controls from \"../../components/controls/Controls\";\r\nimport { useForm, Form } from '../../components/useForm';\r\nimport * as employeeService from \"../../services/employeeService\";\r\n\r\n\r\nconst genderItems = [\r\n    { id: 'male', title: 'Male' },\r\n    { id: 'female', title: 'Female' },\r\n    { id: 'other', title: 'Other' },\r\n]\r\n\r\nconst initialFValues = {\r\n    id: 0,\r\n    fullName: '',\r\n    email: '',\r\n    mobile: '',\r\n    city: '',\r\n    gender: 'male',\r\n    departmentId: '',\r\n    hireDate: new Date(),\r\n    isPermanent: false,\r\n}\r\n\r\nexport default function EmployeeForm(props) {\r\n    const { addOrEdit, recordForEdit } = props\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if ('fullName' in fieldValues)\r\n            temp.fullName = fieldValues.fullName ? \"\" : \"This field is required.\"\r\n        if ('email' in fieldValues)\r\n            temp.email = (/$^|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Email is not valid.\"\r\n        if ('mobile' in fieldValues)\r\n            temp.mobile = fieldValues.mobile.length > 9 ? \"\" : \"Minimum 10 numbers required.\"\r\n        if ('departmentId' in fieldValues)\r\n            temp.departmentId = fieldValues.departmentId.length !== 0 ? \"\" : \"This field is required.\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues === values)\r\n            return Object.values(temp).every(x => x === \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFValues, true, validate);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (validate()) {\r\n            addOrEdit(values, resetForm);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n    }, [recordForEdit])\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Grid container>\r\n                <Grid item xs={6}>\r\n                    <Controls.Input\r\n                        name=\"fullName\"\r\n                        label=\"Full Name\"\r\n                        value={values.fullName}\r\n                        onChange={handleInputChange}\r\n                        error={errors.fullName}\r\n                    />\r\n                    <Controls.Input\r\n                        label=\"Email\"\r\n                        name=\"email\"\r\n                        value={values.email}\r\n                        onChange={handleInputChange}\r\n                        error={errors.email}\r\n                    />\r\n                    <Controls.Input\r\n                        label=\"Mobile\"\r\n                        name=\"mobile\"\r\n                        value={values.mobile}\r\n                        onChange={handleInputChange}\r\n                        error={errors.mobile}\r\n                    />\r\n                    <Controls.Input\r\n                        label=\"City\"\r\n                        name=\"city\"\r\n                        value={values.city}\r\n                        onChange={handleInputChange}\r\n                    />\r\n\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Controls.RadioGroup\r\n                        name=\"gender\"\r\n                        label=\"Gender\"\r\n                        value={values.gender}\r\n                        onChange={handleInputChange}\r\n                        items={genderItems}\r\n                    />\r\n                    <Controls.Select\r\n                        name=\"departmentId\"\r\n                        label=\"Department\"\r\n                        value={values.departmentId}\r\n                        onChange={handleInputChange}\r\n                        options={employeeService.getDepartmentCollection()}\r\n                        error={errors.departmentId}\r\n                    />\r\n                    <Controls.DatePicker\r\n                        name=\"hireDate\"\r\n                        label=\"Hire Date\"\r\n                        value={values.hireDate}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <Controls.Checkbox\r\n                        name=\"isPermanent\"\r\n                        label=\"Permanent Employee\"\r\n                        value={values.isPermanent}\r\n                        onChange={handleInputChange}\r\n                    />\r\n\r\n                    <div>\r\n                        <Controls.Button\r\n                            type=\"submit\"\r\n                            text=\"Submit\" />\r\n                        <Controls.Button\r\n                            text=\"Reset\"\r\n                            color=\"default\"\r\n                            onClick={resetForm} />\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </Form>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Table, TableHead, TableRow, TableCell, makeStyles, TablePagination, TableSortLabel } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    table: {\r\n        marginTop: theme.spacing(3),\r\n        '& thead th': {\r\n            fontWeight: '600',\r\n            color: theme.palette.primary.main,\r\n            backgroundColor: theme.palette.primary.light,\r\n        },\r\n        '& tbody td': {\r\n            fontWeight: '300',\r\n        },\r\n        '& tbody tr:hover': {\r\n            backgroundColor: '#fffbf2',\r\n            cursor: 'pointer',\r\n        },\r\n    },\r\n}))\r\n\r\nexport default function useTable(records, headCells,filterFn) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const pages = [5, 10, 25]\r\n    const [page, setPage] = useState(0)\r\n    const [rowsPerPage, setRowsPerPage] = useState(pages[page])\r\n    const [order, setOrder] = useState()\r\n    const [orderBy, setOrderBy] = useState()\r\n\r\n    const TblContainer = props => (\r\n        <Table className={classes.table}>\r\n            {props.children}\r\n        </Table>\r\n    )\r\n\r\n    const TblHead = props => {\r\n\r\n        const handleSortRequest = cellId => {\r\n            const isAsc = orderBy === cellId && order === \"asc\";\r\n            setOrder(isAsc ? 'desc' : 'asc');\r\n            setOrderBy(cellId)\r\n        }\r\n\r\n        return (<TableHead>\r\n            <TableRow>\r\n                {\r\n                    headCells.map(headCell => (\r\n                        <TableCell key={headCell.id}\r\n                            sortDirection={orderBy === headCell.id ? order : false}>\r\n                            {headCell.disableSorting ? headCell.label :\r\n                                <TableSortLabel\r\n                                    active={orderBy === headCell.id}\r\n                                    direction={orderBy === headCell.id ? order : 'asc'}\r\n                                    onClick={() => { handleSortRequest(headCell.id) }}>\r\n                                    {headCell.label}\r\n                                </TableSortLabel>\r\n                            }\r\n                        </TableCell>))\r\n                }\r\n            </TableRow>\r\n        </TableHead>)\r\n    }\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    }\r\n\r\n    const handleChangeRowsPerPage = event => {\r\n        setRowsPerPage(parseInt(event.target.value, 10))\r\n        setPage(0);\r\n    }\r\n\r\n    const TblPagination = () => (<TablePagination\r\n        component=\"div\"\r\n        page={page}\r\n        rowsPerPageOptions={pages}\r\n        rowsPerPage={rowsPerPage}\r\n        count={records.length}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n    />)\r\n\r\n    function stableSort(array, comparator) {\r\n        const stabilizedThis = array.map((el, index) => [el, index]);\r\n        stabilizedThis.sort((a, b) => {\r\n            const order = comparator(a[0], b[0]);\r\n            if (order !== 0) return order;\r\n            return a[1] - b[1];\r\n        });\r\n        return stabilizedThis.map((el) => el[0]);\r\n    }\r\n\r\n    function getComparator(order, orderBy) {\r\n        return order === 'desc'\r\n            ? (a, b) => descendingComparator(a, b, orderBy)\r\n            : (a, b) => -descendingComparator(a, b, orderBy);\r\n    }\r\n\r\n    function descendingComparator(a, b, orderBy) {\r\n        if (b[orderBy] < a[orderBy]) {\r\n            return -1;\r\n        }\r\n        if (b[orderBy] > a[orderBy]) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    const recordsAfterPagingAndSorting = () => {\r\n        return stableSort(filterFn.fn(records), getComparator(order, orderBy))\r\n            .slice(page * rowsPerPage, (page + 1) * rowsPerPage)\r\n    }\r\n\r\n    return {\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination,\r\n        recordsAfterPagingAndSorting\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Dialog, DialogTitle, DialogContent, makeStyles, Typography } from '@material-ui/core';\r\nimport Controls from \"./controls/Controls\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    dialogWrapper: {\r\n        padding: theme.spacing(2),\r\n        position: 'absolute',\r\n        top: theme.spacing(5)\r\n    },\r\n    dialogTitle: {\r\n        paddingRight: '0px'\r\n    }\r\n}))\r\n\r\nexport default function Popup(props) {\r\n\r\n    const { title, children, openPopup, setOpenPopup } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Dialog open={openPopup} maxWidth=\"md\" classes={{ paper: classes.dialogWrapper }}>\r\n            <DialogTitle className={classes.dialogTitle}>\r\n                <div style={{ display: 'flex' }}>\r\n                    <Typography variant=\"h6\" component=\"div\" style={{ flexGrow: 1 }}>\r\n                        {title}\r\n                    </Typography>\r\n                    <Controls.ActionButton\r\n                        color=\"secondary\"\r\n                        onClick={()=>{setOpenPopup(false)}}>\r\n                        <CloseIcon />\r\n                    </Controls.ActionButton>\r\n                </div>\r\n            </DialogTitle>\r\n            <DialogContent dividers>\r\n                {children}\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Snackbar, makeStyles } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        top: theme.spacing(9)\r\n    }\r\n}))\r\n\r\nexport default function Notification(props) {\r\n\r\n    const { notify, setNotify } = props;\r\n    const classes = useStyles()\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setNotify({\r\n            ...notify,\r\n            isOpen: false\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Snackbar\r\n            className={classes.root}\r\n            open={notify.isOpen}\r\n            autoHideDuration={3000}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            onClose={handleClose}>\r\n            <Alert\r\n                severity={notify.type}\r\n                onClose={handleClose}>\r\n                {notify.message}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Typography, makeStyles, IconButton } from '@material-ui/core'\r\nimport Controls from \"./controls/Controls\";\r\nimport NotListedLocationIcon from '@material-ui/icons/NotListedLocation';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    dialog: {\r\n        padding: theme.spacing(2),\r\n        position: 'absolute',\r\n        top: theme.spacing(5)\r\n    },\r\n    dialogTitle: {\r\n        textAlign: 'center'\r\n    },\r\n    dialogContent: {\r\n        textAlign: 'center'\r\n    },\r\n    dialogAction: {\r\n        justifyContent: 'center'\r\n    },\r\n    titleIcon: {\r\n        backgroundColor: theme.palette.secondary.light,\r\n        color: theme.palette.secondary.main,\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.secondary.light,\r\n            cursor: 'default'\r\n        },\r\n        '& .MuiSvgIcon-root': {\r\n            fontSize: '8rem',\r\n        }\r\n    }\r\n}))\r\n\r\nexport default function ConfirmDialog(props) {\r\n\r\n    const { confirmDialog, setConfirmDialog } = props;\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Dialog open={confirmDialog.isOpen} classes={{ paper: classes.dialog }}>\r\n            <DialogTitle className={classes.dialogTitle}>\r\n                <IconButton disableRipple className={classes.titleIcon}>\r\n                    <NotListedLocationIcon />\r\n                </IconButton>\r\n            </DialogTitle>\r\n            <DialogContent className={classes.dialogContent}>\r\n                <Typography variant=\"h6\">\r\n                    {confirmDialog.title}\r\n                </Typography>\r\n                <Typography variant=\"subtitle2\">\r\n                    {confirmDialog.subTitle}\r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogActions className={classes.dialogAction}>\r\n                <Controls.Button\r\n                    text=\"No\"\r\n                    color=\"default\"\r\n                    onClick={() => setConfirmDialog({ ...confirmDialog, isOpen: false })} />\r\n                <Controls.Button\r\n                    text=\"Yes\"\r\n                    color=\"secondary\"\r\n                    onClick={confirmDialog.onConfirm} />\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport EmployeeForm from \"./EmployeeForm\";\r\nimport { Paper, makeStyles, TableBody, TableRow, TableCell, Toolbar, InputAdornment } from '@material-ui/core';\r\nimport useTable from \"../../components/useTable\";\r\nimport * as employeeService from \"../../services/employeeService\";\r\nimport Controls from \"../../components/controls/Controls\";\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Popup from \"../../components/Popup\";\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Notification from \"../../components/Notification\";\r\nimport ConfirmDialog from \"../../components/ConfirmDialog\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: theme.spacing(5),\r\n        padding: theme.spacing(3)\r\n    },\r\n    searchInput: {\r\n        width: '75%'\r\n    },\r\n    newButton: {\r\n        position: 'absolute',\r\n        right: '10px'\r\n    }\r\n}))\r\n\r\nconst headCells = [\r\n    { id: 'fullName', label: 'Company Name' },\r\n    { id: 'email', label: 'Email Address' },\r\n    { id: 'mobile', label: 'Mobile Number' },\r\n    { id: 'department', label: 'Department' },\r\n    { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\nexport default function Employees() {\r\n\r\n    const classes = useStyles();\r\n    const [recordForEdit, setRecordForEdit] = useState(null)\r\n    const [records, setRecords] = useState(employeeService.getAllEmployees())\r\n    const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n    const [openPopup, setOpenPopup] = useState(false)\r\n    const [notify, setNotify] = useState({ isOpen: false, message: '', type: '' })\r\n    const [confirmDialog, setConfirmDialog] = useState({ isOpen: false, title: '', subTitle: '' })\r\n\r\n    const {\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination,\r\n        recordsAfterPagingAndSorting\r\n    } = useTable(records, headCells, filterFn);\r\n\r\n    const handleSearch = e => {\r\n        let target = e.target;\r\n        setFilterFn({\r\n            fn: items => {\r\n                if (target.value === \"\")\r\n                    return items;\r\n                else\r\n                    return items.filter(x => x.fullName.toLowerCase().includes(target.value))\r\n            }\r\n        })\r\n    }\r\n\r\n    const addOrEdit = (employee, resetForm) => {\r\n        if (employee.id === 0)\r\n            employeeService.insertEmployee(employee)\r\n        else\r\n            employeeService.updateEmployee(employee)\r\n        resetForm()\r\n        setRecordForEdit(null)\r\n        setOpenPopup(false)\r\n        setRecords(employeeService.getAllEmployees())\r\n        setNotify({\r\n            isOpen: true,\r\n            message: 'Submitted Successfully',\r\n            type: 'success'\r\n        })\r\n    }\r\n\r\n    const openInPopup = item => {\r\n        setRecordForEdit(item)\r\n        setOpenPopup(true)\r\n    }\r\n\r\n    const onDelete = id => {\r\n        setConfirmDialog({\r\n            ...confirmDialog,\r\n            isOpen: false\r\n        })\r\n        employeeService.deleteEmployee(id);\r\n        setRecords(employeeService.getAllEmployees())\r\n        setNotify({\r\n            isOpen: true,\r\n            message: 'Deleted Successfully',\r\n            type: 'error'\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Paper className={classes.pageContent}>\r\n\r\n                <Toolbar>\r\n                    <Controls.Input\r\n                        label=\"Search Employees\"\r\n                        className={classes.searchInput}\r\n                        InputProps={{\r\n                            startAdornment: (<InputAdornment position=\"start\">\r\n                                <Search />\r\n                            </InputAdornment>)\r\n                        }}\r\n                        onChange={handleSearch}\r\n                    />\r\n                    <Controls.Button\r\n                        text=\"Add New\"\r\n                        variant=\"outlined\"\r\n                        startIcon={<AddIcon />}\r\n                        className={classes.newButton}\r\n                        onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n                    />\r\n                </Toolbar>\r\n                <TblContainer>\r\n                    <TblHead />\r\n                    <TableBody>\r\n                        {\r\n                            recordsAfterPagingAndSorting().map(item =>\r\n                                (<TableRow key={item.id}>\r\n                                    <TableCell>{item.fullName}</TableCell>\r\n                                    <TableCell>{item.email}</TableCell>\r\n                                    <TableCell>{item.mobile}</TableCell>\r\n                                    <TableCell>{item.department}</TableCell>\r\n                                    <TableCell>\r\n                                        <Controls.ActionButton\r\n                                            color=\"primary\"\r\n                                            onClick={() => { openInPopup(item) }}>\r\n                                            <EditOutlinedIcon fontSize=\"small\" />\r\n                                        </Controls.ActionButton>\r\n                                        <Controls.ActionButton\r\n                                            color=\"secondary\"\r\n                                            onClick={() => {\r\n                                                setConfirmDialog({\r\n                                                    isOpen: true,\r\n                                                    title: 'Are you sure to delete this record?',\r\n                                                    subTitle: \"You can't undo this operation\",\r\n                                                    onConfirm: () => { onDelete(item.id) }\r\n                                                })\r\n                                            }}>\r\n                                            <CloseIcon fontSize=\"small\" />\r\n                                        </Controls.ActionButton>\r\n                                    </TableCell>\r\n                                </TableRow>)\r\n                            )\r\n                        }\r\n                    </TableBody>\r\n                </TblContainer>\r\n                <TblPagination />\r\n            </Paper>\r\n            <Popup\r\n                title=\"Employee Form\"\r\n                openPopup={openPopup}\r\n                setOpenPopup={setOpenPopup}\r\n            >\r\n                <EmployeeForm\r\n                    recordForEdit={recordForEdit}\r\n                    addOrEdit={addOrEdit} />\r\n            </Popup>\r\n            <Notification\r\n                notify={notify}\r\n                setNotify={setNotify}\r\n            />\r\n            <ConfirmDialog\r\n                confirmDialog={confirmDialog}\r\n                setConfirmDialog={setConfirmDialog}\r\n            />\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { CssBaseline, createMuiTheme, ThemeProvider } from '@material-ui/core';\r\n\r\nimport PageHeader from '../components/PageHeader';\r\nimport Employees from \"../pages/Employees/Employees\";\r\nimport PeopleOutlineTwoToneIcon from '@material-ui/icons/PeopleOutlineTwoTone';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#333996\",\r\n      light: '#3c44b126'\r\n    },\r\n    secondary: {\r\n      main: \"#f83245\",\r\n      light: '#f8324526'\r\n    },\r\n    background: {\r\n      default: \"#f4f5fd\"\r\n    },\r\n  },\r\n  overrides:{\r\n    MuiAppBar:{\r\n      root:{\r\n        transform:'translateZ(0)'\r\n      }\r\n    }\r\n  },\r\n  props:{\r\n    MuiIconButton:{\r\n      disableRipple:true\r\n    }\r\n  }\r\n})\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <PageHeader\r\n        title=\"Employees Details\"\r\n        subTitle=\"Details that admin can update only\"\r\n        icon={<PeopleOutlineTwoToneIcon/>}\r\n      />\r\n        <Employees />\r\n        <CssBaseline />\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App/App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}