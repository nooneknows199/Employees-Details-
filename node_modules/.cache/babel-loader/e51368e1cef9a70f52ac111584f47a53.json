{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\Hp\\\\React-Material_UI-table\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import React,{useEffect}from'react';import{Grid}from'@material-ui/core';import Controls from\"../../components/controls/Controls\";import{useForm,Form}from'../../components/useForm';import*as employeeService from\"../../services/employeeService\";var genderItems=[{id:'male',title:'Male'},{id:'female',title:'Female'},{id:'other',title:'Other'}];var initialFValues={id:0,fullName:'',email:'',mobile:'',city:'',gender:'male',departmentId:'',hireDate:new Date(),isPermanent:false};export default function EmployeeForm(props){var addOrEdit=props.addOrEdit,recordForEdit=props.recordForEdit;var validate=function validate(){var fieldValues=arguments.length>0&&arguments[0]!==undefined?arguments[0]:values;var temp=_objectSpread({},errors);if('fullName'in fieldValues)temp.fullName=fieldValues.fullName?\"\":\"This field is required.\";if('email'in fieldValues)temp.email=/$^|.+@.+..+/.test(fieldValues.email)?\"\":\"Email is not valid.\";if('mobile'in fieldValues)temp.mobile=fieldValues.mobile.length>9?\"\":\"Minimum 10 numbers required.\";if('departmentId'in fieldValues)temp.departmentId=fieldValues.departmentId.length!==0?\"\":\"This field is required.\";setErrors(_objectSpread({},temp));if(fieldValues===values)return Object.values(temp).every(function(x){return x===\"\";});};var _useForm=useForm(initialFValues,true,validate),values=_useForm.values,setValues=_useForm.setValues,errors=_useForm.errors,setErrors=_useForm.setErrors,handleInputChange=_useForm.handleInputChange,resetForm=_useForm.resetForm;var handleSubmit=function handleSubmit(e){e.preventDefault();if(validate()){addOrEdit(values,resetForm);}};useEffect(function(){if(recordForEdit!=null)setValues(_objectSpread({},recordForEdit));},[recordForEdit]);return/*#__PURE__*/React.createElement(Form,{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(Grid,{container:true},/*#__PURE__*/React.createElement(Grid,{item:true,xs:6},/*#__PURE__*/React.createElement(Controls.Input,{name:\"fullName\",label:\"Full Name\",value:values.fullName,onChange:handleInputChange,error:errors.fullName}),/*#__PURE__*/React.createElement(Controls.Input,{label:\"Email\",name:\"email\",value:values.email,onChange:handleInputChange,error:errors.email}),/*#__PURE__*/React.createElement(Controls.Input,{label:\"Mobile\",name:\"mobile\",value:values.mobile,onChange:handleInputChange,error:errors.mobile}),/*#__PURE__*/React.createElement(Controls.Input,{label:\"City\",name:\"city\",value:values.city,onChange:handleInputChange})),/*#__PURE__*/React.createElement(Grid,{item:true,xs:6},/*#__PURE__*/React.createElement(Controls.RadioGroup,{name:\"gender\",label:\"Gender\",value:values.gender,onChange:handleInputChange,items:genderItems}),/*#__PURE__*/React.createElement(Controls.Select,{name:\"departmentId\",label:\"Department\",value:values.departmentId,onChange:handleInputChange,options:employeeService.getDepartmentCollection(),error:errors.departmentId}),/*#__PURE__*/React.createElement(Controls.DatePicker,{name:\"hireDate\",label:\"Hire Date\",value:values.hireDate,onChange:handleInputChange}),/*#__PURE__*/React.createElement(Controls.Checkbox,{name:\"isPermanent\",label:\"Permanent Employee\",value:values.isPermanent,onChange:handleInputChange}),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Controls.Button,{type:\"submit\",text:\"Submit\"}),/*#__PURE__*/React.createElement(Controls.Button,{text:\"Reset\",color:\"default\",onClick:resetForm})))));}","map":{"version":3,"sources":["C:/Users/Hp/React-Material_UI-table/src/pages/Employees/EmployeeForm.js"],"names":["React","useEffect","Grid","Controls","useForm","Form","employeeService","genderItems","id","title","initialFValues","fullName","email","mobile","city","gender","departmentId","hireDate","Date","isPermanent","EmployeeForm","props","addOrEdit","recordForEdit","validate","fieldValues","values","temp","errors","test","length","setErrors","Object","every","x","setValues","handleInputChange","resetForm","handleSubmit","e","preventDefault","getDepartmentCollection"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { Grid, } from '@material-ui/core';\r\nimport Controls from \"../../components/controls/Controls\";\r\nimport { useForm, Form } from '../../components/useForm';\r\nimport * as employeeService from \"../../services/employeeService\";\r\n\r\n\r\nconst genderItems = [\r\n    { id: 'male', title: 'Male' },\r\n    { id: 'female', title: 'Female' },\r\n    { id: 'other', title: 'Other' },\r\n]\r\n\r\nconst initialFValues = {\r\n    id: 0,\r\n    fullName: '',\r\n    email: '',\r\n    mobile: '',\r\n    city: '',\r\n    gender: 'male',\r\n    departmentId: '',\r\n    hireDate: new Date(),\r\n    isPermanent: false,\r\n}\r\n\r\nexport default function EmployeeForm(props) {\r\n    const { addOrEdit, recordForEdit } = props\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if ('fullName' in fieldValues)\r\n            temp.fullName = fieldValues.fullName ? \"\" : \"This field is required.\"\r\n        if ('email' in fieldValues)\r\n            temp.email = (/$^|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Email is not valid.\"\r\n        if ('mobile' in fieldValues)\r\n            temp.mobile = fieldValues.mobile.length > 9 ? \"\" : \"Minimum 10 numbers required.\"\r\n        if ('departmentId' in fieldValues)\r\n            temp.departmentId = fieldValues.departmentId.length !== 0 ? \"\" : \"This field is required.\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues === values)\r\n            return Object.values(temp).every(x => x === \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFValues, true, validate);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (validate()) {\r\n            addOrEdit(values, resetForm);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n    }, [recordForEdit])\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Grid container>\r\n                <Grid item xs={6}>\r\n                    <Controls.Input\r\n                        name=\"fullName\"\r\n                        label=\"Full Name\"\r\n                        value={values.fullName}\r\n                        onChange={handleInputChange}\r\n                        error={errors.fullName}\r\n                    />\r\n                    <Controls.Input\r\n                        label=\"Email\"\r\n                        name=\"email\"\r\n                        value={values.email}\r\n                        onChange={handleInputChange}\r\n                        error={errors.email}\r\n                    />\r\n                    <Controls.Input\r\n                        label=\"Mobile\"\r\n                        name=\"mobile\"\r\n                        value={values.mobile}\r\n                        onChange={handleInputChange}\r\n                        error={errors.mobile}\r\n                    />\r\n                    <Controls.Input\r\n                        label=\"City\"\r\n                        name=\"city\"\r\n                        value={values.city}\r\n                        onChange={handleInputChange}\r\n                    />\r\n\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Controls.RadioGroup\r\n                        name=\"gender\"\r\n                        label=\"Gender\"\r\n                        value={values.gender}\r\n                        onChange={handleInputChange}\r\n                        items={genderItems}\r\n                    />\r\n                    <Controls.Select\r\n                        name=\"departmentId\"\r\n                        label=\"Department\"\r\n                        value={values.departmentId}\r\n                        onChange={handleInputChange}\r\n                        options={employeeService.getDepartmentCollection()}\r\n                        error={errors.departmentId}\r\n                    />\r\n                    <Controls.DatePicker\r\n                        name=\"hireDate\"\r\n                        label=\"Hire Date\"\r\n                        value={values.hireDate}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <Controls.Checkbox\r\n                        name=\"isPermanent\"\r\n                        label=\"Permanent Employee\"\r\n                        value={values.isPermanent}\r\n                        onChange={handleInputChange}\r\n                    />\r\n\r\n                    <div>\r\n                        <Controls.Button\r\n                            type=\"submit\"\r\n                            text=\"Submit\" />\r\n                        <Controls.Button\r\n                            text=\"Reset\"\r\n                            color=\"default\"\r\n                            onClick={resetForm} />\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </Form>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}