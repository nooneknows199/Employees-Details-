{"ast":null,"code":"const KEYS = {\n  employees: 'employees',\n  employeeId: 'employeeId'\n};\nexport const getDepartmentCollection = () => [{\n  id: '1',\n  title: 'Development'\n}, {\n  id: '2',\n  title: 'Marketing'\n}, {\n  id: '3',\n  title: 'Accounting'\n}, {\n  id: '4',\n  title: 'HR'\n}];\nexport function insertEmployee(data) {\n  let employees = getAllEmployees();\n  data['id'] = generateEmployeeId();\n  employees.push(data);\n  localStorage.setItem(KEYS.employees, JSON.stringify(employees));\n}\nexport function updateEmployee(data) {\n  let employees = getAllEmployees();\n  let recordIndex = employees.findIndex(x => x.id === data.id);\n  employees[recordIndex] = { ...data\n  };\n  localStorage.setItem(KEYS.employees, JSON.stringify(employees));\n}\nexport function deleteEmployee(id) {\n  let employees = getAllEmployees();\n  employees = employees.filter(x => x.id !== id);\n  localStorage.setItem(KEYS.employees, JSON.stringify(employees));\n}\nexport function generateEmployeeId() {\n  if (localStorage.getItem(KEYS.employeeId) == null) localStorage.setItem(KEYS.employeeId, '0');\n  var id = parseInt(localStorage.getItem(KEYS.employeeId));\n  localStorage.setItem(KEYS.employeeId, (++id).toString());\n  return id;\n}\nexport function getAllEmployees() {\n  if (localStorage.getItem(KEYS.employees) == null) localStorage.setItem(KEYS.employees, JSON.stringify([]));\n  let employees = JSON.parse(localStorage.getItem(KEYS.employees)); //map departmentID to department title\n\n  let departments = getDepartmentCollection();\n  return employees.map(x => ({ ...x,\n    department: departments[x.departmentId - 1].title\n  }));\n}","map":{"version":3,"sources":["C:/Users/Hp/React-Material_UI-table/src/services/employeeService.js"],"names":["KEYS","employees","employeeId","getDepartmentCollection","id","title","insertEmployee","data","getAllEmployees","generateEmployeeId","push","localStorage","setItem","JSON","stringify","updateEmployee","recordIndex","findIndex","x","deleteEmployee","filter","getItem","parseInt","toString","parse","departments","map","department","departmentId"],"mappings":"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","sourcesContent":["const KEYS = {\r\n    employees: 'employees',\r\n    employeeId: 'employeeId'\r\n}\r\n\r\nexport const getDepartmentCollection = () => ([\r\n    { id: '1', title: 'Development' },\r\n    { id: '2', title: 'Marketing' },\r\n    { id: '3', title: 'Accounting' },\r\n    { id: '4', title: 'HR' },\r\n])\r\n\r\nexport function insertEmployee(data) {\r\n    let employees = getAllEmployees();\r\n    data['id'] = generateEmployeeId()\r\n    employees.push(data)\r\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees))\r\n}\r\n\r\nexport function updateEmployee(data) {\r\n    let employees = getAllEmployees();\r\n    let recordIndex = employees.findIndex(x => x.id === data.id);\r\n    employees[recordIndex] = { ...data }\r\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees));\r\n}\r\n\r\nexport function deleteEmployee(id) {\r\n    let employees = getAllEmployees();\r\n    employees = employees.filter(x => x.id !== id)\r\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees));\r\n}\r\n\r\nexport function generateEmployeeId() {\r\n    if (localStorage.getItem(KEYS.employeeId) == null)\r\n        localStorage.setItem(KEYS.employeeId, '0')\r\n    var id = parseInt(localStorage.getItem(KEYS.employeeId))\r\n    localStorage.setItem(KEYS.employeeId, (++id).toString())\r\n    return id;\r\n}\r\n\r\nexport function getAllEmployees() {\r\n    if (localStorage.getItem(KEYS.employees) == null)\r\n        localStorage.setItem(KEYS.employees, JSON.stringify([]))\r\n    let employees = JSON.parse(localStorage.getItem(KEYS.employees));\r\n    //map departmentID to department title\r\n    let departments = getDepartmentCollection();\r\n    return employees.map(x => ({\r\n        ...x,\r\n        department: departments[x.departmentId - 1].title\r\n    }))\r\n}"]},"metadata":{},"sourceType":"module"}