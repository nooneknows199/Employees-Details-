{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\React-Material_UI-table\\\\src\\\\pages\\\\Employees\\\\Employees.js\";\nimport React, { useState } from 'react';\nimport EmployeeForm from \"./EmployeeForm\";\nimport { Paper, makeStyles, TableBody, TableRow, TableCell, Toolbar, InputAdornment } from '@material-ui/core';\nimport useTable from \"../../components/useTable\";\nimport * as employeeService from \"../../services/employeeService\";\nimport Controls from \"../../components/controls/Controls\";\nimport { Search } from \"@material-ui/icons\";\nimport AddIcon from '@material-ui/icons/Add';\nimport Popup from \"../../components/Popup\";\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Notification from \"../../components/Notification\";\nimport ConfirmDialog from \"../../components/ConfirmDialog\";\nconst useStyles = makeStyles(theme => ({\n  pageContent: {\n    margin: theme.spacing(5),\n    padding: theme.spacing(3)\n  },\n  searchInput: {\n    width: '75%'\n  },\n  newButton: {\n    position: 'absolute',\n    right: '10px'\n  }\n}));\nconst headCells = [{\n  id: 'fullName',\n  label: 'Company Name'\n}, {\n  id: 'email',\n  label: 'Email Address'\n}, {\n  id: 'mobile',\n  label: 'Mobile Number'\n}, {\n  id: 'department',\n  label: 'Department'\n}, {\n  id: 'actions',\n  label: 'Actions',\n  disableSorting: true\n}];\nexport default function Employees() {\n  const classes = useStyles();\n  const [recordForEdit, setRecordForEdit] = useState(null);\n  const [records, setRecords] = useState(employeeService.getAllEmployees());\n  const [filterFn, setFilterFn] = useState({\n    fn: items => {\n      return items;\n    }\n  });\n  const [openPopup, setOpenPopup] = useState(false);\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: '',\n    type: ''\n  });\n  const [confirmDialog, setConfirmDialog] = useState({\n    isOpen: false,\n    title: '',\n    subTitle: ''\n  });\n  const {\n    TblContainer,\n    TblHead,\n    TblPagination,\n    recordsAfterPagingAndSorting\n  } = useTable(records, headCells, filterFn);\n\n  const handleSearch = e => {\n    let target = e.target;\n    setFilterFn({\n      fn: items => {\n        if (target.value === \"\") return items;else return items.filter(x => x.fullName.toLowerCase().includes(target.value));\n      }\n    });\n  };\n\n  const addOrEdit = (employee, resetForm) => {\n    if (employee.id === 0) employeeService.insertEmployee(employee);else employeeService.updateEmployee(employee);\n    resetForm();\n    setRecordForEdit(null);\n    setOpenPopup(false);\n    setRecords(employeeService.getAllEmployees());\n    setNotify({\n      isOpen: true,\n      message: 'Submitted Successfully',\n      type: 'success'\n    });\n  };\n\n  const openInPopup = item => {\n    setRecordForEdit(item);\n    setOpenPopup(true);\n  };\n\n  const onDelete = id => {\n    setConfirmDialog({ ...confirmDialog,\n      isOpen: false\n    });\n    employeeService.deleteEmployee(id);\n    setRecords(employeeService.getAllEmployees());\n    setNotify({\n      isOpen: true,\n      message: 'Deleted Successfully',\n      type: 'error'\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.pageContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Controls.Input, {\n    label: \"Search Employees\",\n    className: classes.searchInput,\n    InputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 46\n        }\n      }, /*#__PURE__*/React.createElement(Search, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 33\n        }\n      }))\n    },\n    onChange: handleSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Controls.Button, {\n    text: \"Add New\",\n    variant: \"outlined\",\n    startIcon: /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 36\n      }\n    }),\n    className: classes.newButton,\n    onClick: () => {\n      setOpenPopup(true);\n      setRecordForEdit(null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(TblContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TblHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, recordsAfterPagingAndSorting().map(item => /*#__PURE__*/React.createElement(TableRow, {\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 34\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 37\n    }\n  }, item.fullName), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 37\n    }\n  }, item.email), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 37\n    }\n  }, item.mobile), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 37\n    }\n  }, item.department), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Controls.ActionButton, {\n    color: \"primary\",\n    onClick: () => {\n      openInPopup(item);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(EditOutlinedIcon, {\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(Controls.ActionButton, {\n    color: \"secondary\",\n    onClick: () => {\n      setConfirmDialog({\n        isOpen: true,\n        title: 'Are you sure to delete this record?',\n        subTitle: \"You can't undo this operation\",\n        onConfirm: () => {\n          onDelete(item.id);\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 45\n    }\n  }))))))), /*#__PURE__*/React.createElement(TblPagination, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Popup, {\n    title: \"Employee Form\",\n    openPopup: openPopup,\n    setOpenPopup: setOpenPopup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(EmployeeForm, {\n    recordForEdit: recordForEdit,\n    addOrEdit: addOrEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Notification, {\n    notify: notify,\n    setNotify: setNotify,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ConfirmDialog, {\n    confirmDialog: confirmDialog,\n    setConfirmDialog: setConfirmDialog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/Hp/React-Material_UI-table/src/pages/Employees/Employees.js"],"names":["React","useState","EmployeeForm","Paper","makeStyles","TableBody","TableRow","TableCell","Toolbar","InputAdornment","useTable","employeeService","Controls","Search","AddIcon","Popup","EditOutlinedIcon","CloseIcon","Notification","ConfirmDialog","useStyles","theme","pageContent","margin","spacing","padding","searchInput","width","newButton","position","right","headCells","id","label","disableSorting","Employees","classes","recordForEdit","setRecordForEdit","records","setRecords","getAllEmployees","filterFn","setFilterFn","fn","items","openPopup","setOpenPopup","notify","setNotify","isOpen","message","type","confirmDialog","setConfirmDialog","title","subTitle","TblContainer","TblHead","TblPagination","recordsAfterPagingAndSorting","handleSearch","e","target","value","filter","x","fullName","toLowerCase","includes","addOrEdit","employee","resetForm","insertEmployee","updateEmployee","openInPopup","item","onDelete","deleteEmployee","startAdornment","map","email","mobile","department","onConfirm"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport EmployeeForm from \"./EmployeeForm\";\r\nimport { Paper, makeStyles, TableBody, TableRow, TableCell, Toolbar, InputAdornment } from '@material-ui/core';\r\nimport useTable from \"../../components/useTable\";\r\nimport * as employeeService from \"../../services/employeeService\";\r\nimport Controls from \"../../components/controls/Controls\";\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Popup from \"../../components/Popup\";\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Notification from \"../../components/Notification\";\r\nimport ConfirmDialog from \"../../components/ConfirmDialog\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: theme.spacing(5),\r\n        padding: theme.spacing(3)\r\n    },\r\n    searchInput: {\r\n        width: '75%'\r\n    },\r\n    newButton: {\r\n        position: 'absolute',\r\n        right: '10px'\r\n    }\r\n}))\r\n\r\nconst headCells = [\r\n    { id: 'fullName', label: 'Company Name' },\r\n    { id: 'email', label: 'Email Address' },\r\n    { id: 'mobile', label: 'Mobile Number' },\r\n    { id: 'department', label: 'Department' },\r\n    { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\nexport default function Employees() {\r\n\r\n    const classes = useStyles();\r\n    const [recordForEdit, setRecordForEdit] = useState(null)\r\n    const [records, setRecords] = useState(employeeService.getAllEmployees())\r\n    const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n    const [openPopup, setOpenPopup] = useState(false)\r\n    const [notify, setNotify] = useState({ isOpen: false, message: '', type: '' })\r\n    const [confirmDialog, setConfirmDialog] = useState({ isOpen: false, title: '', subTitle: '' })\r\n\r\n    const {\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination,\r\n        recordsAfterPagingAndSorting\r\n    } = useTable(records, headCells, filterFn);\r\n\r\n    const handleSearch = e => {\r\n        let target = e.target;\r\n        setFilterFn({\r\n            fn: items => {\r\n                if (target.value === \"\")\r\n                    return items;\r\n                else\r\n                    return items.filter(x => x.fullName.toLowerCase().includes(target.value))\r\n            }\r\n        })\r\n    }\r\n\r\n    const addOrEdit = (employee, resetForm) => {\r\n        if (employee.id === 0)\r\n            employeeService.insertEmployee(employee)\r\n        else\r\n            employeeService.updateEmployee(employee)\r\n        resetForm()\r\n        setRecordForEdit(null)\r\n        setOpenPopup(false)\r\n        setRecords(employeeService.getAllEmployees())\r\n        setNotify({\r\n            isOpen: true,\r\n            message: 'Submitted Successfully',\r\n            type: 'success'\r\n        })\r\n    }\r\n\r\n    const openInPopup = item => {\r\n        setRecordForEdit(item)\r\n        setOpenPopup(true)\r\n    }\r\n\r\n    const onDelete = id => {\r\n        setConfirmDialog({\r\n            ...confirmDialog,\r\n            isOpen: false\r\n        })\r\n        employeeService.deleteEmployee(id);\r\n        setRecords(employeeService.getAllEmployees())\r\n        setNotify({\r\n            isOpen: true,\r\n            message: 'Deleted Successfully',\r\n            type: 'error'\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Paper className={classes.pageContent}>\r\n\r\n                <Toolbar>\r\n                    <Controls.Input\r\n                        label=\"Search Employees\"\r\n                        className={classes.searchInput}\r\n                        InputProps={{\r\n                            startAdornment: (<InputAdornment position=\"start\">\r\n                                <Search />\r\n                            </InputAdornment>)\r\n                        }}\r\n                        onChange={handleSearch}\r\n                    />\r\n                    <Controls.Button\r\n                        text=\"Add New\"\r\n                        variant=\"outlined\"\r\n                        startIcon={<AddIcon />}\r\n                        className={classes.newButton}\r\n                        onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n                    />\r\n                </Toolbar>\r\n                <TblContainer>\r\n                    <TblHead />\r\n                    <TableBody>\r\n                        {\r\n                            recordsAfterPagingAndSorting().map(item =>\r\n                                (<TableRow key={item.id}>\r\n                                    <TableCell>{item.fullName}</TableCell>\r\n                                    <TableCell>{item.email}</TableCell>\r\n                                    <TableCell>{item.mobile}</TableCell>\r\n                                    <TableCell>{item.department}</TableCell>\r\n                                    <TableCell>\r\n                                        <Controls.ActionButton\r\n                                            color=\"primary\"\r\n                                            onClick={() => { openInPopup(item) }}>\r\n                                            <EditOutlinedIcon fontSize=\"small\" />\r\n                                        </Controls.ActionButton>\r\n                                        <Controls.ActionButton\r\n                                            color=\"secondary\"\r\n                                            onClick={() => {\r\n                                                setConfirmDialog({\r\n                                                    isOpen: true,\r\n                                                    title: 'Are you sure to delete this record?',\r\n                                                    subTitle: \"You can't undo this operation\",\r\n                                                    onConfirm: () => { onDelete(item.id) }\r\n                                                })\r\n                                            }}>\r\n                                            <CloseIcon fontSize=\"small\" />\r\n                                        </Controls.ActionButton>\r\n                                    </TableCell>\r\n                                </TableRow>)\r\n                            )\r\n                        }\r\n                    </TableBody>\r\n                </TblContainer>\r\n                <TblPagination />\r\n            </Paper>\r\n            <Popup\r\n                title=\"Employee Form\"\r\n                openPopup={openPopup}\r\n                setOpenPopup={setOpenPopup}\r\n            >\r\n                <EmployeeForm\r\n                    recordForEdit={recordForEdit}\r\n                    addOrEdit={addOrEdit} />\r\n            </Popup>\r\n            <Notification\r\n                notify={notify}\r\n                setNotify={setNotify}\r\n            />\r\n            <ConfirmDialog\r\n                confirmDialog={confirmDialog}\r\n                setConfirmDialog={setConfirmDialog}\r\n            />\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}